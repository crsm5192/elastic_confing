filter {
  if [logtype] == "nginx_access_log" {
    json {
      source => "message"
    }
    kv{
      source => "request_args"
      field_split => "&"
      value_split => "="
    }
    if "_jsonparsefailure" in [tags] {
      grok {
        match => ["message","%{IPORHOST:remote_ip} - %{USER:request_user} \[%{HTTPDATE:request_time}\] \"%{WORD:request_method} %{DATA:request_url} HTTP/%{NUMBER:request_version}\" %{NUMBER:request_status} %{NUMBER:request_bytes} \"%{DATA:referer}\" \"%{DATA:request_agent}\""]
      }
    }
    date {
      match => ["request_time","YYYY-MM-dd'T'HH:mm:ss"]
      timezone => "Asia/Shanghai"
      target => ["@timestamp"]
    }                   
    if [remote_ip] == "-" {
      mutate {
	replace => { 
          "client_ip" => "0.0.0.0" 
        }
      }
    }
    geoip {
      source => ["client_ip"]
    }
    mutate {
      remove_field => ["user","refferer","request_version","server_host","upstream_port","beat","input","source","prospector","@version","tags","host","message"]
      convert => ["upstream_response_time_consum", "float"]
      convert => ["response_time_consum", "float"]
      convert => ["send_byte", "float"]
    }
    kv{
      source => "request_url"
      field_split => "&?"
      value_split => "="
    }
    urldecode {
      field => "request_url"
    }
  }
}